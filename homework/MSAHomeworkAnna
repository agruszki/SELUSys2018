1.	Some algorithms treat a gap as a single penalty value, regardless of how large the gap is. Others assess a gap opening penalty, then a smaller 
gap extension penalty. When (i.e. what kind of biological scenarios) might you think it might be better to use one algorithm over the other?

Gap penalties are important because if enough gaps are allowed, all the base pairs or amino acids in a sequence could potentially be forced to match, 
giving an incorrect alignment. Gap opening and extension penalties minimizes this possibility. A gap opening penalty will make gaps less frequent. A 
gap extension penalty will favor shorter gaps. Choosing how to use gap penalties could depend on several factors. For example, the type of sequence 
should be considered. A protein-coding sequence that causes frameshift mutations should have higher gap extension penalties than a region that is more 
variable (Wiley and Lieberman 2011).  This is because indels in sequences that could cause frameshifts in amino acid sequences are less likely to be 
conserved as they can be deleterious to the individual. On the other hand, indels in non-coding or more variable regions may be more common as they do 
not undergo such extreme purifying selection. Likewise, indels may be more common in protein regions that do not code for vitally important structures 
(Delachaux et al 2007).  Additionally, if a sequence is known to have a high number of short indels, a gap extension penalty would be useful. The time 
of divergence should also be considered. Sequences with a shallow time of divergence will have fewer indels than sequences with a deeper time of 
divergence. Therefore, a gap extension penalty would be more useful in sequences with shallow divergence dates as long gaps in the sequence are less 
likely. Finally, quality of the sequences should also be addressed. A low-quality sequence will naturally have segments missing and should not incur 
the same gap extension penalties as a high-quality sequence. When choosing which gap penalty system to use in a multiple sequence alignment, the type 
of sequence, time of divergence, and quality of sequences should be considered. 

2.	Breaking problems into subproblems is a common way to attack a tough problem. In the case of iterative alignments, we break the tree into 
smaller pieces. Are there biological questions for which you expect this would not be helpful?

Iterative alignments work best on large scales with several taxa. Difficulties could arise when attempting to run an iterative alignment at species or 
population levels. There needs to be a large enough difference between subsets to estimate a final tree. If sequences are too similar, the alignment 
program will have difficulty merging and aligning subsets which could result in polytomies. A polytomy would not be useful when searching for better 
alignments or for determining relationships. Likewise, if there are not enough taxa, the alignment program might not have enough information to 
estimate an improved tree. In this case, a simple progressive alignment should be used. Additionally, if there is an incorrect alignment in one of the 
subsets, this issue will be compounded when the subsets are merged and aligned. This could pose a problem when working with low quality sequences or 
an insufficient amount of data or taxa. 

